{"version":3,"sources":["Component/Home/Home.jsx","Component/Navbar/Navbar.jsx","Component/About/About.jsx","Action/Action.jsx","ActionType/ActionType.jsx","Component/Authors/Authors.jsx","Component/ManageAuthor/ManageAuthor.jsx","Component/AddAuthors/AddAuthor.jsx","Component/UpdateAuthor/UpdateAuthor.jsx","reducer/reducer.jsx","reducer/index.jsx","App.js","Store/Store.jsx","serviceWorker.js","index.js"],"names":["Home","props","state","className","Component","Navbar","href","About","getData","dispatch","a","fetch","response","json","data","console","log","type","payload","insertData","value","method","headers","Accept","body","JSON","stringify","updateData","ID","url","deleteData","Authors","Author","newAuthor","Id","Book_Id","First_Name","Last_Name","Delete","id","window","confirm","this","auth","length","list","map","index","key","IDBook","FirstName","LastName","exact","to","onClick","scope","connect","authorData","authors","bindActionCreators","ManageAuthor","onSubmit","newContact","onChange","e","setState","target","name","class","htmlFor","AddAuthor","UpdateAuthor","Update","updContact","match","params","then","result","warn","disabled","initialState","combineReducers","action","App","store","createStore","reducer","applyMiddleware","thunk","path","component","render","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.086ec0c7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Home.scss\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n       <h1 className=\"home\">Home Page</h1>\n    )\n  }\n}\nexport default Home;\n","import React, { Component } from \"react\";\nimport \"./Navbar.scss\";\n\nexport default class Navbar extends Component {\n  render() {\n    return (\n      <nav>\n        <div>\n          <ul>\n            <li>\n              <a href=\"/Home\">Home</a>\n            </li>\n            <li>\n              <a href=\"/About\">About</a>\n            </li>\n            <li>\n              <a href=\"/Authors\">Authors</a>\n            </li>\n            <li>\n              <a href=\"/AddAuthor\">Add Authors</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./About.scss\";\n\n\nclass About extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n    <h1 className=\"About\">About</h1>\n    )\n  }\n}\nexport default About;","import { DISPLAY_AUTHOR } from \"../ActionType/ActionType\";\nimport { ADD_AUTHOR } from \"../ActionType/ActionType\";\nimport { UPDATE_AUTHOR } from \"../ActionType/ActionType\";\nimport { DELETE_AUTHOR } from \"../ActionType/ActionType\";\n\nexport const getData = () => \n{\n  return async (dispatch) => {\n    const url = \"https://fakerestapi.azurewebsites.net/api/Authors\";\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(\"Fetch data :-\", data);\n    dispatch({\n      type: DISPLAY_AUTHOR,\n      payload: data,\n    });\n  };\n};\nexport const insertData = (data) => {\n  const value = data;\n  return async (dispatch) => {\n    const url = \"https://fakerestapi.azurewebsites.net/api/Authors\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(value),\n    });\n    const data = await response.json();\n    console.log(\"Fetch data :-\", data);\n    dispatch({\n      type: ADD_AUTHOR,\n      payload: data,\n    });\n  };\n};\nexport const updateData = (ID, data) => {\n  const value = data;\n  console.log(\"id\", ID, data);\n\n  return async (dispatch) => {\n    const url = \"https://fakerestapi.azurewebsites.net/api/Authors/\" + ID;\n    const response = await fetch(url, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(value),\n    });\n    const data = await response.json();\n    console.log(\"Fetch data :-\", data);\n    dispatch({\n      type: UPDATE_AUTHOR,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteData = (ID) => {\n  return async (dispatch) => {\n    const url = \"https://fakerestapi.azurewebsites.net/api/Authors/\" + ID;\n    const response = await fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await response.json();\n    dispatch({\n      type: DELETE_AUTHOR,\n      payload: data,\n    });\n  };\n};\n","export const ADD_AUTHOR = \"ADD_AUTHOR\";\nexport const UPDATE_AUTHOR = \"UPDATE_AUTHOR\";\nexport const DELETE_AUTHOR = \"DELETE_AUTHOR\";\nexport const DISPLAY_AUTHOR = \"DISPLAY_AUTHOR\";\n\n\n","import React, { Component } from \"react\";\nimport \"./Authors.scss\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getData, deleteData } from \"../../Action/Action\";\n\nclass Authors extends Component {\n  state = {\n    Author: [],\n    newAuthor: {\n      Id: \"\",\n      Book_Id: \"\",\n      First_Name: \"\",\n      Last_Name: \"\",\n    },\n  };\n\n  componentDidMount() \n  {\n    this.props.getData();\n  }\n  Delete = (id) => {\n    let r = window.confirm(\"Do you want to delete this Author\");\n    if (r === true) {\n      this.props.deleteData(id);\n    }\n  };\n\n  render() \n  {\n    console.log(\"get data\", this.props.auth.length);\n\n    const list =\n      this.props.auth.length !== 0 &&\n      this.props.auth.map((auth, index) => {\n        return (\n          <tr key={auth.ID}>\n            <td>{auth.ID}</td>\n            <td>{auth.IDBook}</td>\n            <td>{auth.FirstName}</td>\n            <td>{auth.LastName}</td>\n            <td>\n              <NavLink exact to={`/UpdateAuthor/${auth.ID}`}>\n                <button type=\"button\" className=\"update\">\n                  Update\n                </button>\n              </NavLink>\n              <button\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => this.Delete(auth.ID)}\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        );\n      });\n\n    return (\n      <div>\n        <div className=\"container\">\n          <h1>Authors</h1>\n          <br />\n          <NavLink exact to=\"/ManageAuthor\">\n            <div className=\"btn-container\">Add Author</div>\n          </NavLink>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Id</th>\n                <th scope=\"col\">Book_ID</th>\n                <th scope=\"col\">First_Name</th>\n                <th scope=\"col\">Last_Name</th>\n                <th scope=\"col\">Action</th>\n              </tr>\n            </thead>\n            <tbody>{list}</tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.authorData.authors,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      getData,\n      deleteData,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Authors);\n","import React, { Component } from \"react\";\nimport \"./ManageAuthor.scss\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { insertData } from \"../../Action/Action\";\n\nclass ManageAuthor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ID: \"\",\n      IDBook: \"\",\n      FirstName: \"\",\n      LastName: \"\",\n    };\n  }\n  onSubmit = () => {\n    const { ID, IDBook, FirstName, LastName } = this.state;\n    const newContact = {\n      ID,\n      IDBook,\n      FirstName,\n      LastName,\n    };\n    this.props.insertData(newContact);\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { ID, IDBook, FirstName, LastName } = this.state;\n    return (\n      <div className=\"container\">\n        <h2>Manage Author</h2>\n        <br />\n        <div class=\"form-group\">\n          <label htmlFor=\"id\">ID</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"ID\"\n            value={ID}\n            onChange={this.onChange}\n          />\n        </div>\n        <div class=\"form-group\">\n          <label htmlFor=\"FirstName\">Book ID</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"IDBook\"\n            value={IDBook}\n            onChange={this.onChange}\n          />\n        </div>\n        <div class=\"form-group\">\n          <label htmlFor=\"LastName\">First Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"FirstName\"\n            value={FirstName}\n            onChange={this.onChange}\n          />\n        </div>\n        <div class=\"form-group\">\n          <label htmlFor=\"age\">Last Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"LastName\"\n            value={LastName}\n            onChange={this.onChange}\n          />\n        </div>\n        <button\n          className=\"button\"\n          onClick={() => {\n            this.onSubmit();\n          }}\n        >\n          Save\n        </button>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    // auth: state.authorData.authors,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      insertData,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageAuthor);\n","import React, { Component } from \"react\";\nimport \"./AddAuthor.scss\";\nimport ManageAuthor from \"../ManageAuthor/ManageAuthor\";\n\nclass AddAuthor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return <ManageAuthor />;\n  }\n}\nexport default AddAuthor;\n","import React, { Component } from \"react\";\nimport \"./UpdateAuthor.scss\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { updateData, getData } from \"../../Action/Action\";\n\nclass UpdateAuthor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ID: \"\",\n      IDBook: \"\",\n      FirstName: \"\",\n      LastName: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\n      \"https://fakerestapi.azurewebsites.net/api/Authors/\" +\n        this.props.match.params.id\n    ).then((response) => {\n      response.json().then((result) => {\n        console.warn(result);\n        this.setState({\n          ID: result.ID,\n          IDBook: result.IDBook,\n          FirstName: result.FirstName,\n          LastName: result.LastName,\n        });\n      });\n    });\n  }\n  Update = () => {\n    const { ID, IDBook, FirstName, LastName } = this.state;\n    const updContact = {\n      ID,\n      IDBook,\n      FirstName,\n      LastName,\n    };\n    this.props.updateData(ID, updContact);\n  };\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n  render() \n  {\n    const { ID, IDBook, FirstName, LastName } = this.state;\n    console.warn(this.props.match.params.id);\n    return (\n      <div className=\"container\">\n        <h2>Update Author</h2>\n        <br />\n        <label htmlFor=\"id\">ID</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          name=\"ID\"\n          disabled\n          value={ID}\n          onChange={this.onChange}\n        />\n\n        <label htmlFor=\"id\">Book ID</label>\n\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          name=\"IDBook\"\n          value={IDBook}\n          onChange={this.onChange}\n        />\n\n        <label htmlFor=\"id\">First Name</label>\n\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          name=\"FirstName\"\n          value={FirstName}\n          onChange={this.onChange}\n        />\n\n        <label htmlFor=\"id\">Last Name</label>\n\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          name=\"LastName\"\n          value={LastName}\n          onChange={this.onChange}\n        />\n\n        <br />\n        <br />\n\n        <button\n          className=\"button\"\n          onClick={() => {\n            this.Update();\n          }}\n        >\n          Update\n        </button>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.authorData.authors,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      getData,\n      updateData,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateAuthor);\n","import { DISPLAY_AUTHOR } from \"../ActionType/ActionType\";\nimport { ADD_AUTHOR } from \"../ActionType/ActionType\";\nimport { UPDATE_AUTHOR } from \"../ActionType/ActionType\";\nimport { DELETE_AUTHOR } from \"../ActionType/ActionType\";\n\nconst initialState = {\n  authors: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case DISPLAY_AUTHOR:\n      return {\n        ...state,\n        authors: [...state.authors, ...action.payload],\n      };\n\n    case ADD_AUTHOR:\n      return {\n        ...state,\n        authors: [...state.authors, action.payload],\n      };\n\n    case UPDATE_AUTHOR:\n      return {\n        ...state,\n        authors: [...state.authors, action.payload],\n      };\n\n    case DELETE_AUTHOR:\n      return {\n        ...state,\n        authors: [...state.authors, action.payload],\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport AuthorData from \"./reducer\";\nexport default combineReducers({\n   authorData : AuthorData,\n});","import React from \"react\";\nimport Home from \"./Component/Home/Home\";\nimport Navbar from \"./Component/Navbar/Navbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./Component/About/About\";\nimport Authors from \"./Component/Authors/Authors\";\nimport AddAuthor from \"./Component/AddAuthors/AddAuthor\";\nimport UpdateAuthor from \"./Component/UpdateAuthor/UpdateAuthor\";\nimport ManageAuthor from \"./Component/ManageAuthor/ManageAuthor\";\nimport {Provider} from 'react-redux';\nimport configureStore from './Store/Store';\n\nfunction App() {\n  return ( \n    <Provider store={configureStore()}>\n     <Router> \n      <Navbar/>\n      <Switch>\n        <Route exact path=\"/Home\" component={Home} />\n        <Route exact path=\"/About\" component={About} />\n        <Route exact path=\"/Authors\" component={Authors} />\n        <Route exact path=\"/ManageAuthor\" component={ManageAuthor}/>\n        <Route exact path=\"/UpdateAuthor/:id\" render={props=>(\n          <UpdateAuthor{...props}/>\n        )}/>\n        <Route exact path=\"/AddAuthor\" component={AddAuthor} />\n      </Switch>\n    </Router>\n    </Provider>\n \n  )\n  \n}\n\nexport default App;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"../reducer/index\"\nexport default function configureStore() \n{\n  return createStore(reducer, {}, applyMiddleware(thunk));\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>    \n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}